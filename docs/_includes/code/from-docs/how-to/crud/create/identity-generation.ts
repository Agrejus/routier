import { DataStore } from "@routier/datastore";
import { MemoryPlugin } from "@routier/memory-plugin";
import { s, InferCreateType } from "@routier/core/schema";

// Define a user schema with identity field
const userSchema = s.define("users", {
    id: s.string().key().identity(), // Identity field - datastore generates value
    email: s.string().distinct(),
    name: s.string(),
    createdAt: s.date().default(() => new Date()),
}).compile();

// Create DataStore with collection
class AppContext extends DataStore {
    constructor() {
        super(new MemoryPlugin("app-db"));
    }

    users = this.collection(userSchema).create();
}

const ctx = new AppContext();

// Creating without providing ID - identity field is auto-generated
const newUser = await ctx.users.addAsync({
    email: "alice@example.com",
    name: "Alice Smith"
    // No id provided - datastore will generate it
});

console.log("Created user:", newUser);
// Output: [{ 
//   id: "generated-uuid",  // ‚Üê Auto-generated by datastore
//   email: "alice@example.com", 
//   name: "Alice Smith",
//   createdAt: Date
// }]

await ctx.saveChangesAsync();
